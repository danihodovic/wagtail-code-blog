[tox]
isolated_build = true
skipsdist = True
envlist =
    pylint
    black
    isort
    release
    py{310,311}-django50

[testenv]
commands =
    pytest --cov --cov-report=xml
deps =
    pytest
    pytest-cov
    pytest-django
    readtime
    django-json-ld
    django-extensions
    wagtail
    wagtail-metadata
    wagtail-markdown
    wagtail-foliage
    django50: Django==5.0
setenv =
    PYTHONPATH = {toxinidir}:{env:PYTHONPATH:}

[testenv:black]
# Empty list to not install all deps from base testenv
deps =
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install
commands = black --exclude '.*(migrations|.tox|.venv)' --check --diff .

[testenv:isort]
# Empty list to not install all deps from base testenv
deps =
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install
commands = isort --check-only --diff .

[testenv:pylint]
# Empty list to not install all deps from base testenv
deps =
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install
commands = pylint --django-settings-module=tests.settings wagtail_code_blog tests

[testenv:mypy]
deps =
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install
commands = mypy .

[testenv:release]
deps =
    poetry
commands =
    poetry publish --build
passenv =
    POETRY_PYPI_TOKEN_PYPI

[pytest]
addopts = --ds=tests.settings --reuse-db -ra
testpaths = tests
norecursedirs = .git */migrations/* .venv

[coverage:run]
branch = True
source = wagtail_code_blog

omit =
    ./.venv/*
    */migrations/*
    */apps.py

[coverage:report]
fail_under = 45
