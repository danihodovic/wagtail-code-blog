[tox]
isolated_build = true
skipsdist = True
envlist =
    pylint
    black
    isort
    release
    py{37,38}-django30

[testenv]
commands =
    pytest --cov --cov-report=xml
deps =
    pytest
    pytest-cov
    pytest-django
    readtime
    django-json-ld
    django-extensions
    wagtail
    wagtail-metadata
    wagtail-markdown
    wagtail-foliage
    django30: Django==3.0
setenv =
    PYTHONPATH = {toxinidir}:{env:PYTHONPATH:}

[testenv:black]
basepython = python3
skip_install = true
deps = black
commands = black --exclude '.*(migrations)' --target-version=py38 --check --diff .

[testenv:isort]
basepython = python3
skip_install = true
deps = isort
commands = isort --check-only --diff .

[testenv:pylint]
basepython = python3
skip_install = true
deps =
    django
    pylint
    pylint-django
    pytest
    wagtail
    wagtail-markdown
    wagtail-metadata
    wagtail-foliage
    readtime
commands = pylint wagtail_code_blog tests

[testenv:mypy]
basepython = python3
skip_install = true
deps =
    mypy
    django-stubs
    wagtail
    wagtail-markdown
    wagtail-metadata
    django-json-ld
    django-extensions
    readtime
    django-model-utils
commands = mypy .

[testenv:release]
deps =
    poetry
commands =
    poetry publish --build
passenv =
    POETRY_PYPI_TOKEN_PYPI

[pytest]
addopts = --ds=tests.settings.test --reuse-db -ra
testpaths = tests
norecursedirs = .git */migrations/* .venv

[isort]
skip = venv,.tox
skip_glob=**/migrations/*
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
forced_separate =
    tests
    wagtail_resume
line_length= 88

[coverage:run]
branch = True
source = wagtail_code_blog

omit =
    ./.venv/*
    */migrations/*
    */apps.py

[coverage:report]
fail_under = 70
