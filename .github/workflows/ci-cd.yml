name: CI/CD

on: # yamllint disable-line rule:truthy
  pull_request:
    branches: ["master", "main"]
  push:
    branches: ["master", "main"]
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Black with tox
        run: tox -e black

      - name: Isort with tox
        run: tox -e isort

      - name: Pylint with tox
        run: tox -e pylint

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: ["3.11"]
        dj-version: [django50]
    steps:

      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Test with tox
        run: |
          PY_VERSION=${{ matrix.python-version }} &&
          tox -e py${PY_VERSION//.}-${{ matrix.dj-version }}

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'release'
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
          npm install

      - name: Build Tailwind CSS
        run: |
          npm run build

      - name: Publish pip packages with tox
        run: tox -e release
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
