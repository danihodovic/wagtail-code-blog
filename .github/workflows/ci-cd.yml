---
name: CI/CD

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches: [ "master", "main" ]
  push:
    branches: [ "master", "main" ]
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Black with tox
        run: tox -e black

      - name: Isort with tox
        run: tox -e isort

      - name: Pylint with tox
        run: tox -e pylint

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.9]
        dj-version: [django40]
    steps:

      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Test with tox
        run: |
          PY_VERSION=${{ matrix.python-version }} &&
          tox -e py${PY_VERSION//.}-${{ matrix.dj-version }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: ${{ matrix.python-version }}-${{ matrix.dj-version }}
          yml: ./codecov.yml

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'release'
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
          npm install

      - name: Build Tailwind CSS
        run: |
          npm run build

      - name: Publish pip packages with tox
        run: tox -e release
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
